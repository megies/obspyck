[base]
# duration: int or float
duration = 3600
# starttime_offset: int or float
starttime_offset = 0
pluginpath = /home/megies/obspyck
# merge:
#   <empty> for no merging at all
#   "safe"  merge waveform data that does not overlap, discarding overlapping
#           data segments
#   "overwrite" for merging waveform data, potentially allowing data from
#               overlapping waveform data (use with caution)
merge =
# event_server: server for event information pull/push
# currently only a Jane server is supported
# server details must be specified in separate server section below
event_server =
ignore_gse2_chksum_error = true
# verbosity: one of 'normal', 'verbose', 'debug' or 'quiet'
verbosity = normal
zero_mean = true
normalization = true
no_metadata = false
# colormaps are being looked up by name:
#   - first: if possible as `from obspy.imaging.cm import <name>`
#   - if that fails: using `matplotlib.cm.get_cmap(name=<name>)`
# undefined colormaps fall back to current matplotlib default colormap
# (matplotlibrc, key 'image.cmap', usually defaulting to 'jet')
spectrogram_colormap = viridis
magnitude_pick_color = green
# determines the (left-right) search window around the mouse pick for the
# highest/lowest amplitude value when setting a magnitude pick (in number of
# samples of the time series)
magnitude_picker_width = 10
# determines which units the switch for physical units converts to
# one of: velocity, displacement, acceleration
physical_units = velocity
# parameters used in tapering before any filtering (see obspy.Trace.taper)
taper_max_length = 5
taper_max_percentage = 0.05
taper_type = cosine

# special purpose / edge use case switches, not widely tested..
[misc]
# allow reading files with multiple picks of same phase type and same SEED ID,
# experimental, not sure what happens when modifying/deleting/saving to
# QuakeML, use at your own risk!
allow_multiple_picks_with_same_seed_id = false
# percentage to scroll with wheel, deciaml from 0.0 to 1.0
scrollWheelPercentage = 0.30
# whether to revert scroll direction
scrollWheelInvert = false
# whether to merge Catalog upon reading/fetching. In normal operation obspyck
# only considers the first event in a Catalog read from QuakeML or fetched from
# a server. Using this switch obspyck instead merges information of all events
# into one single event. Highly experimental. Should not be used for anything
# else than review of existing events. USE AT YOUR OWN RISK.
merge_events_in_catalog = false

[seismic_phases]
# keys: phase hint (case sensitive)
# values: color specification understood by matplotlib.colors.ColorConverter.to_rgb()
#         (matplotlib color names, hex color strings, ...)
# please note that some parts might (especially interactions with location routines etc.)
# very likely use hard coded 'P' and 'S' phases so check if you're getting the
# expected results when using other phase names! Modify at your own risk!
P = red
S = blue

[station_combinations]
EXAMPLE = TA.T34A..BH?,TA.T35A..BH?,TA.TUL1..BH?,TA.U35A..BH?,TA.U36A..BH?,TA.V35A..BH?,TA.V36A..BH?,TA.V37A..BH?,TA.W35A..BH?,TA.W36A..BH?,TA.W37B..BH?,TA.X35A..BH?,TA.X36A..BH?
EXAMPLE1 = II.PFO.00.LH?,GE.APE..LH?,GE.PSZ..LH?,CI.BBR..LH*,IV.PRMA..LH?,G.RER..LH*
EXAMPLE2 = 7A.W01..LH?,CI.BBR..LH*
# for complex, time-dependent station combinations use an exclamation mark
# followed by a corresponding section title where the station combination is
# defined
EXAMPLE3 = !station_combination_BW

[station_combination_BW]
# this is an example section for a complex, time-dependent station combination.
# this can be useful e.g. in case of instrumentation changes that go along with
# a change in channel naming or when stations get added or removed in the
# field. each entry consists of a stream identifier as the key and zero, one or
# two timestamps to denote for which times the stream should be fetched.
# All times interpreted as UTC.
#
# if value is empty, always fetch stream, regardless of requested time
GR.FUR..HH? =
# otherwise, value can be..
#   - two timestamps separated by a comma, to fetch stream only for times in
#     between these two timestamps
BW.RTBE..HH? = 2017-07-01,2017-10-01
#   - a timestamp preceded by a "larger than" sign, to fetch stream only for times after the
#     given timestamp (including it, so this is actually evaluated as >=)
BW.RMOA..HH? = >2017-07-04T15:00:00
#   - a comma followed by a timestamp, to fetch stream only for times before the
#     given timestamp (including it, so this is actually evaluated as <=)
BW.RMOA..EH? = <2017-07-04T11:40:00

[seed_id_lookup]
# wildcards ("?", "*") and regex (e.g. "[EH]*") are only allowed in channel!
# lookup of id can be specified by (and is performed in exactly this order):
#   - complete SEED ID exactly as it appears in station_combination
II.PFO.00.LH? = server_fdsn_iris
IV.PRMA..LH? = server_fdsn_ingv
G.NOUC..LH* = server_fdsn_ipgp
#   - SEED ID down to location code level
GE.APE. = server_fdsn_geofon
#   - SEED ID down to station code level
CI.BBR = server_fdsn_iris
#   - network code
GE = server_fdsn_geofon
7A = server_fdsn_iris
TA = server_fdsn_iris

[rotate_channels]
# WARNING: rotated channels use the response of the first
# channel used in rotation on all three components after
# rotation!
7A.W01. = LHZ,LH1,LH2
BW.FFB1. = HHZ,HH1,HH2

[gui_defaults]
filter = false
filter_type = bandpass
filter_highpass = 0.01
filter_lowpass = 0.05
filter_corners = 3
sta = 0.5
lta = 10.0
ar_f1 = 1.0
ar_f2 = 20.0
ar_sta_p = 0.1
ar_lta_p = 1.0
ar_sta_s = 1.0
ar_lta_s = 4.0
ar_m_p = 2
ar_m_s = 8
ar_l_p = 0.1
ar_l_s = 0.2
spectrogram_wlen = 0.4
spectrogram_overlap = 0.9
spectrogram_log = false

[keys]
setPick = a
setPickError = s
delPick = q
setMagMin = a
setMagMax = s
delMagMinMax = q
switchPhase = control
prevStream = y
nextStream = x
# mouse wheels zooms time axis by default, but when this key is held down it
# zooms amplitude axis instead
switchWheelZoomAxis = shift
scrollWheelZoom = alt
setWeight0 = 0
setWeight1 = 1
setWeight2 = 2
setWeight3 = 3
setPolU = +
setPolD = -
setOnsetI = i
setOnsetE = e

[server_fdsn_iris]
type = fdsn
# FDSN short URLS understood by ObsPy FDSN Client are OK
base_url = IRIS
user =
password =
timeout = 30
user_agent = obspyck
debug = false

[server_fdsn_ingv]
type = fdsn
# FDSN short URLS understood by ObsPy FDSN Client are OK
base_url = INGV
user =
password =
timeout = 30
user_agent = obspyck
debug = false

[server_fdsn_ipgp]
type = fdsn
base_url = http://eida.ipgp.fr
user =
password =
timeout = 30
user_agent = obspyck
debug = false

[server_fdsn_geofon]
type = fdsn
# URL short key mappings recognized by obspy work too
# https://docs.obspy.org/packages/obspy.clients.fdsn.html?highlight=URL
base_url = GEOFON
user =
password =
timeout = 30
user_agent = obspyck
debug = false

[server_seedlink_iris]
type = seedlink
server = rtserve.iris.washington.edu
port = 18000
timeout = 30
debug = false
# seedlink does not serve station metadata, so a different server defined in
# the config file has to be specified for fetching station metadata here:
metadata_server = server_fdsn_iris

[server_sds_bay200]
type = sds
sds_root = /bay200/mseed_online/archive
sds_type = D
format = MSEED
fileborder_seconds = 30
fileborder_samples = 5000
# SDS client does not serve station metadata, so a different server defined in
# the config file has to be specified for fetching station metadata here:
metadata_server = server_fdsn_iris
# FMTSTR can be specified and will be set as client.FMTSTR to enable lookup on
# directory trees that are not strictly SDS
# see https://docs.obspy.org/packages/autogen/obspy.clients.filesystem.sds.Client.FMTSTR.html
#FMTSTR = my-directory/{year}/{doy}/*.mseed
#FMTSTR = my-directory/{year}/{doy}/{network}.{station}.{location}.{channel}.mseed

[nonlinloc]
# default pick uncertainty used in nonlinloc if no pick errors are set
default_pick_uncertainty = 0.05

[matplotlibrc]
lines.linewidth = 1.0
font.size = 10

[ar_picker]
# for meaning of parameters, see obspy documentation for routine
# obspy.signal.trigger.ar_pick
f1 = 1.0
f2 = 20.0
lta_p = 1.0
sta_p = 0.1
lta_s = 4.0
sta_s = 1.0
m_p = 2
m_s = 8
l_p = 0.1
l_s = 0.2
